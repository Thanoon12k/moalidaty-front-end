// Mocks generated by Mockito 5.4.6 from annotations
// in moalidaty1/test/features/subscripers/services/subscriper_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:moalidaty1/features/subscripers/models/model.dart' as _i2;
import 'package:moalidaty1/features/subscripers/repositories/repository.dart'
    as _i3;
import 'package:moalidaty1/utils/dummy_data.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSubscriper_0 extends _i1.SmartFake implements _i2.Subscriper {
  _FakeSubscriper_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SubscriperRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubscriperRepository extends _i1.Mock
    implements _i3.SubscriperRepository {
  MockSubscriperRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl =>
      (super.noSuchMethod(
            Invocation.getter(#baseUrl),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#baseUrl),
            ),
          )
          as String);

  @override
  _i5.Future<List<_i2.Subscriper>> fetchSubscribers() =>
      (super.noSuchMethod(
            Invocation.method(#fetchSubscribers, []),
            returnValue: _i5.Future<List<_i2.Subscriper>>.value(
              <_i2.Subscriper>[],
            ),
          )
          as _i5.Future<List<_i2.Subscriper>>);

  @override
  _i5.Future<void> destroySubscriper(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#destroySubscriper, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.Subscriper> createSubscriper(_i2.Subscriper? sub) =>
      (super.noSuchMethod(
            Invocation.method(#createSubscriper, [sub]),
            returnValue: _i5.Future<_i2.Subscriper>.value(
              _FakeSubscriper_0(
                this,
                Invocation.method(#createSubscriper, [sub]),
              ),
            ),
          )
          as _i5.Future<_i2.Subscriper>);

  @override
  _i5.Future<_i2.Subscriper> updateSubscriper(dynamic sub) =>
      (super.noSuchMethod(
            Invocation.method(#updateSubscriper, [sub]),
            returnValue: _i5.Future<_i2.Subscriper>.value(
              _FakeSubscriper_0(
                this,
                Invocation.method(#updateSubscriper, [sub]),
              ),
            ),
          )
          as _i5.Future<_i2.Subscriper>);
}

/// A class which mocks [DummyData].
///
/// See the documentation for Mockito's code generation for more information.
class MockDummyData extends _i1.Mock implements _i6.DummyData {
  MockDummyData() {
    _i1.throwOnMissingStub(this);
  }
}
